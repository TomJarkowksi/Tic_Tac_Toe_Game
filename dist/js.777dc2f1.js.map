{"version":3,"sources":["src/js/Modal.js","src/js/Game.js","src/js/index.js"],"names":["Modal","body","document","querySelector","div","createElement","h1","classList","add","appendChild","time","winner","textContent","style","display","setTimeout","Game","pick","target","dataset","row","column","round","innerHTML","playerO","playerX","parentNode","nextPlayer","turn","board","check","result","reduce","total","concat","displayResult","lastWin","modal","displayModal","winX","winsPlayerX","winO","winsPlayerO","winPlayer","clearBoard","boxes","forEach","box","resetResult","querySelectorAll","btnReset","game","addEventListener","e"],"mappings":"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","file":"js.777dc2f1.js","sourceRoot":"..","sourcesContent":["export {\r\n    Modal\r\n};\r\nclass Modal {\r\n    constructor() {\r\n        const body = document.querySelector(\"body\")\r\n        this.div = document.createElement(\"div\")\r\n        this.h1 = document.createElement(\"h1\")\r\n        this.div.classList.add(\"modalDiv\")\r\n        this.h1.classList.add(\"modalH1\")\r\n        body.appendChild(this.div)\r\n        this.div.appendChild(this.h1)\r\n        this.time = 3000\r\n    }\r\n\r\n\r\n\r\n    displayModal(winner) {\r\n        if (winner == \"-\") {\r\n            this.h1.textContent = `Hard game! Draw`\r\n        } else {\r\n            this.h1.textContent = `Congratulations!!! Player won: ${winner}`\r\n        }\r\n        this.div.style.display = \"flex\"\r\n\r\n        setTimeout(\r\n            () => {\r\n                this.div.style.display = \"none\"\r\n            }, this.time\r\n        )\r\n    }\r\n}","export {\r\n    Game\r\n};\r\n\r\nimport {\r\n    Modal\r\n} from \"./Modal.js\";\r\n\r\nclass Game {\r\n    constructor() {\r\n        this.playerX = `<i class=\"fas fa-times\"></i>`;\r\n        this.playerO = `<i class=\"far fa-circle\"></i>`;\r\n        this.winPlayer = document.querySelector(\".info .win span\");\r\n        this.nextPlayer = document.querySelector(\".info .next span\");\r\n        this.winsPlayerX = document.querySelector(\".playerX span\");\r\n        this.winsPlayerO = document.querySelector(\".playerO span\");\r\n        this.boxes = [...document.querySelectorAll(\".box\")];\r\n        this.turn = \"\";\r\n        this.round = 0;\r\n        this.winX = 0;\r\n        this.winO = 0;\r\n        this.modal = new Modal();\r\n\r\n        this.board = [\r\n            [\"\", \"\", \"\"],\r\n            [\"\", \"\", \"\"],\r\n            [\"\", \"\", \"\"],\r\n        ];\r\n    }\r\n    pick = ({\r\n        target\r\n    }) => {\r\n        const {\r\n            row,\r\n            column\r\n        } = target.dataset;\r\n        if (this.round % 2 == 0) {\r\n            if (\r\n                target.innerHTML == this.playerO ||\r\n                target.innerHTML == this.playerX ||\r\n                target.parentNode.innerHTML == this.playerO ||\r\n                target.parentNode.innerHTML == this.playerX\r\n            ) {\r\n                return;\r\n            } else {\r\n                this.nextPlayer.textContent = \"O\";\r\n\r\n                target.innerHTML = this.playerX;\r\n                this.turn = \"X\";\r\n            }\r\n        } else {\r\n            if (\r\n                target.innerHTML == this.playerO ||\r\n                target.innerHTML == this.playerX ||\r\n                target.parentNode.innerHTML == this.playerO ||\r\n                target.parentNode.innerHTML == this.playerX\r\n            ) {\r\n                return;\r\n            } else {\r\n                this.nextPlayer.textContent = \"X\";\r\n\r\n                target.innerHTML = this.playerO;\r\n                this.turn = \"O\";\r\n            }\r\n        }\r\n        this.round++;\r\n        this.board[row][column] = this.turn;\r\n        this.check();\r\n    };\r\n    check = () => {\r\n        let result = this.board.reduce((total, row) => total.concat(row));\r\n        if (\r\n            (result[8] == \"O\" && result[7] == \"O\" && result[6] == \"O\") ||\r\n            (result[3] == \"O\" && result[4] == \"O\" && result[5] == \"O\") ||\r\n            (result[0] == \"O\" && result[1] == \"O\" && result[2] == \"O\") ||\r\n            (result[0] == \"O\" && result[3] == \"O\" && result[6] == \"O\") ||\r\n            (result[1] == \"O\" && result[4] == \"O\" && result[7] == \"O\") ||\r\n            (result[2] == \"O\" && result[5] == \"O\" && result[8] == \"O\") ||\r\n            (result[6] == \"O\" && result[4] == \"O\" && result[2] == \"O\") ||\r\n            (result[0] == \"O\" && result[4] == \"O\" && result[8] == \"O\")\r\n        ) {\r\n            this.displayResult(\"O\")\r\n        } else if (\r\n            (result[8] == \"X\" && result[7] == \"X\" && result[6] == \"X\") ||\r\n            (result[3] == \"X\" && result[4] == \"X\" && result[5] == \"X\") ||\r\n            (result[0] == \"X\" && result[1] == \"X\" && result[2] == \"X\") ||\r\n            (result[0] == \"X\" && result[3] == \"X\" && result[6] == \"X\") ||\r\n            (result[1] == \"X\" && result[4] == \"X\" && result[7] == \"X\") ||\r\n            (result[2] == \"X\" && result[5] == \"X\" && result[8] == \"X\") ||\r\n            (result[6] == \"X\" && result[4] == \"X\" && result[2] == \"X\") ||\r\n            (result[0] == \"X\" && result[4] == \"X\" && result[8] == \"X\")\r\n        ) {\r\n            this.displayResult(\"X\")\r\n        } else if (\r\n            result[0] !== \"\" &&\r\n            result[1] !== \"\" &&\r\n            result[2] !== \"\" &&\r\n            result[3] !== \"\" &&\r\n            result[4] !== \"\" &&\r\n            result[5] !== \"\" &&\r\n            result[6] !== \"\" &&\r\n            result[7] !== \"\" &&\r\n            result[8] !== \"\"\r\n        ) {\r\n            this.displayResult(\"-\")\r\n        } else {\r\n            return;\r\n        }\r\n    };\r\n\r\n    displayResult = (lastWin) => {\r\n        this.modal.displayModal(lastWin)\r\n        if (lastWin == \"X\") {\r\n            this.winX++;\r\n            this.winsPlayerX.textContent = this.winX;\r\n        } else if (lastWin == \"O\") {\r\n            this.winO++;\r\n            this.winsPlayerO.textContent = this.winO;\r\n        }\r\n        this.winPlayer.textContent = lastWin;\r\n        this.clearBoard();\r\n    }\r\n    clearBoard = () => {\r\n        this.boxes.forEach((box) => {\r\n            box.innerHTML = \"\";\r\n        });\r\n        this.board = [\r\n            [\"\", \"\", \"\"],\r\n            [\"\", \"\", \"\"],\r\n            [\"\", \"\", \"\"],\r\n        ];\r\n    };\r\n\r\n    resetResult = () => {\r\n        this.winO = 0;\r\n        this.winX = 0;\r\n        this.winsPlayerO.textContent = this.winO;\r\n        this.winsPlayerX.textContent = this.winX;\r\n        this.winPlayer.textContent = \"-\";\r\n        this.clearBoard();\r\n    };\r\n}","import \"../scss/style.scss\"\r\nimport {\r\n    Game\r\n} from \"./Game.js\";\r\n\r\n\r\n\r\n\r\nconst boxes = [...document.querySelectorAll(\".box\")]\r\nconst btnReset = document.querySelector(\"button\");\r\nconst game = new Game();\r\n\r\n\r\nboxes.forEach(box => box.addEventListener(\"click\", (e) => game.pick(e)))\r\nbtnReset.addEventListener(\"click\", () => game.resetResult())"]}